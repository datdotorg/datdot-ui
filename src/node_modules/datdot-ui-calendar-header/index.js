const debug = require('debug')
const bel = require('bel')
const csjs = require('csjs-inject')
const { format, getDaysInMonth } = require('date-fns')
const svg = require('svg')
module.exports = datdot_ui_calendar_header

function datdot_ui_calendar_header(opts) {
    const { page, getDate, protocol } = opts
    const ui = 'ui-calendar-header'
    const log = debug(page)
    const logger = log.extend(`${ui} >`)
    const date = getDate || new Date()
    let year = parseInt( format(date, 'yyyy') )
    let current = parseInt( format( date, 'M') )
    // get Capital month
    let month = format( date, 'MMMM')
    let message, days

    // elements
    const title = bel`<h3 class=${css.title}>${month} ${year}</h3>`
    const prev = svg( { css: `${css.icon} ${css['icon-prev']}`, path: '../src/node_modules/assets/arrow-left.svg' } )
    const next = svg( { css: `${css.icon} ${css['icon-next']}`, path: '../src/node_modules/assets/arrow-right.svg' } )

    const element = bel`
    <div class=${css["calendar-header"]}>
        <button class="${css.btn} ${css.prev}" onclick=${ () => prevTrigger()}>${prev}</button>
        ${title}
        <button class="${css.btn} ${css.next}" onclick=${ () => nextTrigger()}>${next}</button>
    </div>
    `

    return element

    function updateMonth(m) {
        month = format(new Date(year, m - 1), 'MMMM')
        return title.innerHTML = `${month} ${year}`
    }

    function prevTrigger() {
        // decrement year
        if (current <= 1) {
            current = 12
            year -= 1
        } else {
            current -= 1
        }

        updateMonth(current)
        days = getDaysInMonth( new Date(year, current-1) )
        logger('prev update', current, `${month} ${year}, ${days} days`)

        // send message to parent component
        message = { from: page, flow: ui, type: 'click', body: 'prev month', count: current, month, year, days}
        logger(message.body, 'send', message)

        return protocol(message)
    }
    
    function nextTrigger() {
        // increment month
        if (current >= 12) {
            current = 1
            year += 1
        } else {
            current += 1
        }
        
        updateMonth(current)
        days = getDaysInMonth( new Date(year, current-1) )
        logger('next update', current, `${month} ${year}, ${days} days`)
        
        // send message to parent component
        message = { from: page, flow: ui, type: 'click', body: 'next month', count: current, month, year, days}
        logger(message.body, 'send', message)

        return protocol(message)
    }
}

const css = csjs`
.calendar-header {
    display: grid;
    grid-template-rows: auto;
    grid-template-columns: minmax(25px, 30px) auto minmax(25px, 30px);
    align-items: center;
}
.btn {
    background: none;
    border: none;
    border-radius: 50px;
    width: 30px;
    height: 30px;
    padding: 0;
    outline: none;
    transition: background-color 0.3s ease-in-out;
}
.btn:active, .btn:hover {
    background-color: #C9C9C9;
}
.btn:active div > svg path, .btn:hover div > svg path {
}

.prev {

}
.next {

}
.icon svg path {
    transition: stroke 0.25s ease-in-out;
}
.icon-prev {

}
.icon-next {

}
.title {
    text-align: center;
}
`