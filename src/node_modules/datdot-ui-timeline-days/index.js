const debug = require('debug')
const bel = require('bel')
const csjs = require('csjs-inject')
const { format, getDate, getMonth, getYear, getDaysInMonth, isToday } = require('date-fns')

module.exports = datdot_ui_timeline_days

function datdot_ui_timeline_days({data = null, style}, protocol) {
    const ui = 'datdot-ui-timeline-days'
    const date = new Date()
    const today = getDate(date)

    if ( data === null ) {
        // if no data
        var count = getMonth(date) // initial month
        var month = format(date, 'MMMM') // get capitalization month
        var year = getYear(date) // initial year
        var days = getDaysInMonth(date) // initial days
    } else {
        // if data is loaded
        var { from, count, month, year, days } = data
    }

    const is_today = (d) => isToday(new Date(year, count, d)) 

    
    const el = bel`<section class=${style}></section>`
    const log = debug(ui)

    for (let d = 1; d <= days; d++ ) {
        let date = format(new Date(year, count, d), 'EEEE MMMM d, yyyy')
        let setDate = format(new Date(year, count, d), 'yyyy-M-d')
        
        if (d < today && count <= new Date().getMonth() && year <= new Date().getFullYear() ) {
            var day = bel`<div role="button" class="${css['timeline-day']} ${css['disabled-date']}" aria-today=${is_today(d)} aria-label="${date}" data-date="${setDate}">${d}</div>`
        } else if ( count < new Date().getMonth() && year <= new Date().getFullYear() ) {
            var day = bel`<div role="button" class="${css['timeline-day']} ${css['disabled-date']}" aria-today=${is_today(d)} aria-label="${date}" data-date="${setDate}">${d}</div>`
        } else if ( year < new Date().getFullYear()) {
            var day = bel`<div role="button" class="${css['timeline-day']} ${css['disabled-date']}" aria-today=${is_today(d)} aria-label="${date}" data-date="${setDate}">${d}</div>`
        }
         else {
            var day = bel`<div role="button" class="${css['timeline-day']} ${is_today(d) ? css.today : ''}" aria-today=${is_today(d)} aria-label="${date}" data-date="${setDate}" onclick=${(el) => onclick( el.target, setDate )}>${d}</div>`
        }
        el.append(day)
    }
    
    return el

    function onclick(target, date) {
        const message = { from: from ? from : ui, flow: ui, type: 'click', body: date, count, month, year, days }
        const logger = log.extend(`day> ${message.body}`)

        const children = [...el.children]
        children.forEach( btn => {
            btn.classList.remove(css['date-selected'])
            btn.removeAttribute('aira-selected')
        })

        target.classList.add(css['date-selected'])
        target.setAttribute('aria-selected', true)

        logger('date selected', date);
        logger('send', message)

        return protocol(message)
    }
}

const css = csjs`
.timeline-day {
    text-align: center;
    padding: 8px;
    cursor: pointer;
}
.today {
    color: #fff;
    background-color: #000;
}
.date-selected {
    color: #fff;
    background-color: blue;
}
.disabled-date {
    color: #BBBBBB;
    cursor: default;
}
`